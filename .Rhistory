summary(cdc)
cdc$smoke100
table(cdc$genhlth)
table(cdc$genhlth)/dim(cdc)
table(cdc$genhlth)/row(cdc)
rowsum(cdc)
dim(cdc)
dim(cdc)[1]
table(cdc$genhlth)/dim(cdc)[1]
gender_smokers = table(cdc$gender,cdc$smoke100)
mosaicplot(gender_smokers)
under23_more100 = subset(cdc, cdc$age < 23 && cdc$smoke100 == 1)
under23_more100
under23_more100 = subset(cdc, cdc$age < 23 && cdc$smoke100 == '1')
under23_more100
dim(under23_more100)
summary(cdc)
cdc
head(cdc)
under23_more100 = subset(cdc, cdc$age < 23 )
under23_more100
under23_more100 = subset(cdc, cdc$age < 23 && cdc$smoke100 == 1)
under23_more100
under23_more100 = subset(cdc, cdc$age < 23 && cdc$smoke100 == "1")
under23_more100
under23_more100 = subset(cdc, cdc$smoke100 == "1")
under23_more100
head(und)
head(under23_more100)
under23_more100 = subset(cdc, cdc$age < 23 & cdc$smoke100 == "1")
under23_more100
dim(under23_more100)
boxplot(cdc$height ~ cdc$gender)
bmi = (cdc$weight / cdc$height^2) * 703
bmi''
bmi
boxplot(bmi ~ cdc$genhlth)
names(cdc)
plot(cdc$weight,cdc$wtdesire)
sum(dbinom(70:245, size = 245, p = 0.25))
sum(dbinom(0:70, size = 245, p = 0.25))
1-sum(dbinom(0:70, size = 245, p = 0.25))
1-sum(dbinom(0:69, size = 245, p = 0.25))
1-sum(dbinom(0:35, size = 3000000, p=0.00001))
1-sum(dbinom(0:34, size = 3000000, p=0.00001))
sum(dbinom(35:3000000, size = 3000000, p=0.00001))
sum(dbinom(36:3000000, size = 3000000, p=0.00001))
load(url("http://www.openintro.org/stat/data/ames.RData"))
area <- ames$Gr.Liv.Area
price <- ames$SalePrice
summary(area)
hist(area)
boxplot(area)
?boxplot
hist(area)
samp0 <- sample(area, 50)
samp1 <- sample(area, 50)
summary(samp1)
boxplot(samp1)
boxplot(area,samp1)
mean(samp1)
samp100 <- sample(area, 100)
samp1000<- sample(area, 1000)
mean(samp100)
mean(samp1000)
mean(samp1)
mean(area)
sample_means50 <- rep(NA, 5000)
sample_means50
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50, breaks = 25)
summary(sample_means50)
sample_means_small <- rep(NA, 100)
for(i in 1:100){
samp <- sample(area, 50)
sample_means_small[i] <- mean(samp)
}
sample_means_small
hist(sample_means50)
sample_means10 <- rep(NA, 5000)
sample_means100 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 10)
sample_means10[i] <- mean(samp)
samp <- sample(area, 100)
sample_means100[i] <- mean(samp)
}
par(mfrow = c(3, 1))
par
par(mfrow = c(3, 1))
mfrow
xlimits = range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
par(mfrow = c(1, 1))
sample_means50 <- rep(NA, 5000)
sample_means150 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
samp <- sample(price, 150)
sample_means150[i] <- mean(samp)
}
par(mfrow = c(2,1))
xlimits = range(sample_means50)
hist(sample_means50, break = 20 xlim = xlimits)
hist(sample_means50, breaks = 20 xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means150, breaks = 20, xlim = xlimits)
load(url("http://www.openintro.org/stat/data/ames.RData"))
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
samp
boxplot(samp)
par(mfrow = c(1, 1))
boxplot(samp)
samp2 <- sample(population, 60)
boxplot(samp,samp2)
sample_mean <- mean(samp)
sample_mean
se <- sd(samp)/sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
length(x = population)
mean(population)
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for(i in 1:50){
samp <- sample(population, n) # obtain a sample of size n = 60 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
lower <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper <- samp_mean + 1.96 * samp_sd / sqrt(n)
c(lower[1],upper[1])
plot_ci(lower, upper, mean(population))
?qnorm
qnorm(0.95)
qnorm(1-0.95)
1-0.95
qnorm((1-0.95)/2)
qnorm((1-0.99)/2)
lower <- samp_mean - 2.58 * samp_sd / sqrt(n)
upper <- samp_mean + 2.58 * samp_sd / sqrt(n)
plot_ci(lower, upper, mean(population))
sqr
4.65/sqrt(40)
(9.51-10/0.7352296
(9.51-10)/0.7352296
;
(9.51-10)/0.7352296
?qnorm()
qnorm(0.81)
1-qnorm(0.81)
1-pnorm(0.81)
pnorm(-0.6664585)
1.09
1-0.09
1-0.02
(0.91*0.02)+(0.09*0.9)
(0.09*0.9)/0.0992
c(1,2)
c
x<-c(1,2)
x
median(x)
summary(x)
xcalc<-c(-5,-4,-3,-2,1,7,10,11,17,18)
summary(xcalc)
xplac<-c(-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
summary(xplac)
xcalc
samp(xcalc,5)
sample(xcalc,5)
c(xcalc,splac)
c(xcalc,xplac)
xall<-c(xcalc,xplac)
samp_dif100<-rep(NA,100)
for(i in 1:100){}
for(i in 1:100){
sp_calc<-sample(xall,10);
sp_plac<-sample(xall,11);
samp_dif100[i]<-median(sp_calc)-median(sp_plac);
}
samp_dif100
summary(samp_dif100)
hist(samp_dif100,breaks = 25)
hist(samp_dif100,breaks = 35)
hist(samp_dif100,breaks = 50)
hist(samp_dif100)
hist(samp_dif100)
?qnorm
qnorm(0.9)
dnorm(0.9)
pnorm(0.9)
norm
?norm
qnorm(-3.9)
pnorm(-3.9)
qnomr(0.00005)
qnorm(0.00005)
qnorm(0.9)
1-0.80
0.2/2
qnorm(0.1)
1.28*18
(1.28*18/4)^2
.15-.11
/2
.15-.11
0.04/2
q()
2^2
(3.4^2)/18 +(2.7^2)/18
sqrt((3.4^2)/18 +(2.7^2)/18)
2 * pt(2.485, df = 25, lower.tail = FALSE)
clear
load(url("http://bit.ly/dasi_nc"))
summary(nc)
summary(nc)
gained_clean = na.omit(nc$gained)
n = length(gained_clean)
n
summary(gained_clean)
boot_means = rep(NA, 100)
for(i in 1:100){
boot_sample = sample(gained_clean, n, replace = TRUE)
boot_means[i] = mean(boot_sample)
}
hist(boot_means)
?quantile
quantile(gained_clean)
quantile(gained_clean,c(.25,.75))
quantile(gained_clean,c(.5,.95))
quantile(gained_clean,c(.05,1))
quantile(gained_clean,c(0.05,0.95))
mean(gained_clean)
?se
se <- sd(boot_means)/sqrt(length(x = boot_means))
se
mean(boot_means)
mean(boot_means)-1.65*se
mean(boot_means)+1.65*se
quantile(boot_means,c(0.05,0.95))
hist(boot_means)
source("http://bit.ly/dasi_inference")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.90, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.90, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "median", boot_method = "se")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "median", boot_method = "se")
inference(nc$fage, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
summary(nc)
by(nc$weight, nc$habit, mean)
boxplot(nc$weight~nc$habit)
hist(nc$weight~nc$habit)
histPlot(nc$weight~nc$habit)
hist(nc$weight)
with(nc$weight,nc$habit)
with(nc$weight~nc$habit)
?with
?within
?subset
with(nc$weight,subset(nc$habit))
subset(nc$weight,nc$habit)
subset(nc$weight,select=nc$habit)
subset(nc,select=nc$habit)
subset(nc,select = nc$habit)
subset(nc,nc$habit)
?with
histPlot(nc$weight~nc$habit)
boxplot(nc$weight~nc$habit)
by(nc$weight, nc$habit, mean)
by(nc$weight, nc$habit, length)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical", order = c("smoker","nonsmoker"))
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0, alternative = "twosided", method = "theoretical", order = c("smoker","nonsmoker"))
by(nc$weight, nc$habit, max)
by(nc$mage, nc$habit, max)
by(nc$mage, nc$mature, max)
by(nc$mage, nc$mature, max,min)
by(nc$mage, nc$mature, max)
by(nc$mage, nc$mature, min)
load(url("http://bit.ly/dasi_gss_ws_cl"))
gss
summary(gss)
inference(y = gss$wordsum, x = gss$class, est = "mean", type = "ht", alternative = "greater", method = "theoretical")
0.05/6
install.packages("gmodels");
library(gmodels);
?CrossTable
64.68-0.62*.814
64.68-0.62*81.4
13.1-14.212
2.869/3.008
load(url("http://www.openintro.org/stat/data/mlb11.RData"))
mlbll
mlb11
summary(mlb11)
plot(mlb11$runs,mlb11$hits)
plot(mlb11$at_bats,mlb11$runs)
plot(mlb11$runs,mlb11$at_bats)
plot(mlb11$at_bats,mlb11$runs)
cor(mlb11$runs, mlb11$at_bats)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
m2 <- lm(runs ~ homeruns, data = mlb11)
summary(m2)
plot(mlb11$runs ~ mlb11$at_bats)
abline(m1)
mlb11$runs[mlb11$at_bats == 5579]
m1
-2789.2429+0.6304*5579
713-(-2789.2429+0.6304*5579)
m1$residuals
m2$residuals
m1$residuals
m1$
;
m1$fitted.values
mlb11$at_bats == 5579
m1$residuals
mlb11$at_bats == 5579
mlb11
mlb11[mlb11$at_bats == 5579]
mlb11$runs
[mlb11$at_bats == 5579]
mlb11$team[mlb11$at_bats == 5579]
m1$residuals
plot(m1$residuals ~ mlb11$at_bats)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(m1$residuals)
qqnorm(m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals)  # adds diagonal line to the normal prob plot
m1 <- lm(runs ~ at_bats, data = mlb11)
m1
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
m1 <- lm(runs ~ mlb11$at_bats, data = mlb11)
summary(lm(runs ~ mlb11$at_bats, data = mlb11))
summary(lm(mlb11$runs ~ mlb11$at_bats, data = mlb11))
summary(lm(mlb11$runs ~ mlb11$hits, data = mlb11))
summary(lm(mlb11$runs ~ mlb11$wins, data = mlb11))
summary(lm(mlb11$runs ~ mlb11$bat_avg, data = mlb11))
summary(lm(mlb11$runs ~ mlb11$hits, data = mlb11))
summary(lm(mlb11$runs ~ mlb11$new_obs, data = mlb11))
summary(lm(mlb11$runs ~ mlb11$new_slug, data = mlb11))
summary(lm(mlb11$runs ~ mlb11$new_onbase, data = mlb11))
load(url("http://www.openintro.org/stat/data/evals.RData"))
summary(evals)
summary(evals$score)
boxplot(evals$score)
evals$score < 3
xx<-evals$score < 3
xx
xx<-evals$score[evals$score < 3]
xx
length(xx)
summary(evals$score)
plot(evals$score ~ evals$bty_avg)
?jitter
plot(evals$score ~ jitter(evals$bty_avg)
)
plot(evals$score ~ jitter(evals$bty_avg))
plot(jitter(evals$score) ~ jitter(evals$bty_avg))
plot(jitter(evals$score) ~ evals$bty_avg)
plot(jitter(evals$score) ~ evals$bty_avg)
plot(jitter(evals$score) ~ evals$bty_avg)
plot(jitter(evals$score) ~ evals$bty_avg)
m_bty<-lm(evals$score~evals$bty_avg, data=evals)
m_bty
abline(m_bty)
summary(m_bty)
plot(m_bty$residuals~evals$bty_avg)
hist(m_bty$residuals)
qqnorm(m_bty$residuals)
qqline(m_bty$residuals)
plot(m_bty$residuals)
plot(m_bty$residuals~m_bty$fitted)
plot(abs(m_bty$residuals) ~ m_bty$fitted)
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[,13:19])
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
multiLines(m_bty_gen)
m_bty_ran <- lm(score ~ bty_avg + rank, data = evals)
summary(m_bty_ran)
multiLines(m_bty_ran)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level +  cls_credits + bty_avg, data = evals)
summary(m_full)
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits , data = evals)
summary(m1)$adj.r.squared
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits , data = evals)
summary(m1)$adj.r.squared
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level  + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits , data = evals)
summary(m2)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval
+ cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 = lm(score ~ gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
qt(0.025,df=155)
0.915*0.915
qt(0.025,df=155)
11-18
1-0.12
0.88^4
(1-0.12)
(1-0.12)^4
1-(1-0.12)^4
1-0.025
1-0.98
qt(0.02,9)
qt(0.02,df=9)
qt(0.01,df=9)
qt(2.24,df=22)
?qt
dt(2.24,df=22)
dt(2.24,df=21)
qt(0.04,df=21)
qt(0.04,df=22)
qt(0.037,df=22)
qt(0.037144,df=22)
qt( 0.03734346,df=22)
pt( 0.03734346,df=22)
qt(2.24,21)
dt(2.24,21)
qt(dt(2.24,21),21)
pt(dt(2.24,21),21)
pt(2.24,21)
pt(2.24,21,lower.tail = FALSE)
2*pt(2.24,21,lower.tail = FALSE)
dt(pt(2.24,21,lower.tail = FALSE),21)
qt(pt(2.24,21,lower.tail = FALSE),21)
qt(pt(2.24,21,lower.tail = FALSE),21, lower.tail = FALSE)
qt((0.066/2),9, lower.tail = FALSE)
248.3-244.8
3.5/2.09171
qt(1-0.95,21)
qt((1-0.95)/2,21)
qt((1-0.98)/2,9)
qt((1-0.98)/2,9)*1.673272
3.5+4.721033
3.5-4.721033
1/5
1-0.24
(1-0.24)*0.24
((1-0.24)*0.24)/3226
sqrt(((1-0.24)*0.24)/3226)
sqrt(((1-0.22)*0.20)/3226)
(112*46)/625
(513*46)/625
(112*579)/625
(513*579)/625
0.05*0.93
0.95*0.03
0.0465/(0.0465+0.0285)
(3819.99*251)/(15079.02*(251-8))
1-(3819.99*251)/(15079.02*(251-8))
5738.41/15079.02
library(plyr)
setwd("~/coursera/reproresearch/peer1/RepData_PeerAssessment1")
install.packages("plyr")
library(plyr)
version
